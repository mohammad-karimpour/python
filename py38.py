""" کار با فایل ها """

# برای کار با فایل ها از این متد استفاده میکنیم
F = open()


""" چند ورودی میگیرد """
# 1 => آدرس فایل
# 2 => نوع کار با فایل
# 3 => فرمت نوشتاری  - معمولا utf-8
# 4 => هندل کردن ارور

# نمونه ای از تمامی ارگومان ها
fi = open('num.txt' , 'w' , encoding='utf8' , errors='replace')




# چند نوع کار با فایل داریم
open('py26.py', 'r') # => باز کردن فایل برای خواندن
open('py26.py', 'w') # => برای نوشتن - محتوای قبلی پاک میشود
open('py26.py', 'a') # => برای نوشتن - محتوای قبلی پاک نمیشود
open('py26.py', 'x') # => برای ساختن و نوشتن

# اگر بعد از کارکتر از عبارت + استفاده کنیم یعنی همان کاربرد با نوشتن هم
open('py26.py', 'r+') # هم نوشتن هم خواندن


# چند نوع هندل کردن ارور داریم
# برای موقعی که یک کاراکتر ناخوانا را به فابل اضافه میکنیم بجای ارور چکار کند - حالت دیفالت ارور میدهد
open('r.py', 'r', errors='backslashreplace') # با کد های (بک اسلش دار) جایگدین میکند - \u78ff4
open('r.py', 'r', errors='ignore') # نادیده گرفتن کارکتر
open('r.py', 'r', errors='namereplace') # با اسم آن را جایگذین میکند
open('r.py', 'r', errors='replace') # با علامت سوال ؟ جایگذین میکند
open('r.py', 'r', errors='xmlcharrefreplace') # به صورت کد (ایکس ام ال) آن را میخواند



""" نوشتن """

F.write('mohammadkarimpour') # نوشتن متن در فایل
print(F.writeble()) # آیا فایل مد نظر قابل نوشت هست؟
F.read() # خواندن
F.readline() # هر بار صدا زدن یک خط را میخواند






# ساختار with  
# ساختاری استاندارد برای کار با فایل

# with  فایل مد نظر   as   اسم دلخواه برای کار کردن روی فایل:
#    دستورات مد نظر

with open('User.json' , 'w') as Uj:
    Uj.write('mohammad')