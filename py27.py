"""تابع ها"""
# تابع ها برای انجام یکسری عملیات در زمانی مشخص

def user():
    print('mohammad')

""" صدا زدن"""
user()





"""ورودی تابع"""
def User_2(a,b,c):
    print(a+b+c)

User_2(1,2,3) # 6
User_2(a=1,b=2,c=3) # 6



# میتوان برای ورودی تابع از لیست و تاپل و ست هم استفاده کرد
User_2(*[1,2,3]) # User_2(1,2,3)



# برای اینکه بتوانیم یک دیکشنری را به ورودی یک تابع بدهید
# کلید اسم پارامتر است و ولیو مقدار پارامتر
User_2(**{"id":1,"name":"mohammad"})



# مقدار دیفالت 
def num(a=3,b=4,c=5):
    pass
num(1,1) # 1,1,5




# ورودی نا محدود
# از هر اسمی میتوان استفاده کرد ولی به صورت قرارداد از این عبارت ها استفاده میشود

def no(*args): # ورودی را به صورت لیست به تابع وارد میگند
    pass
no(1,2,3,4)

def dNO(**kwargs): # ورودی ها باید از کلید برخوردار باشند و به صورت دیکشنری آنرا به تابع میدهد
    pass
dNO(a=1,b=2,c=3)


# مابقی ورودی های اضافه را برای خود میگیرد
def foo(a,b,*c):
    pass
foo(1,2,3,4,5,6,7,8,9) # a=1 - b=2 - c=3,4,5,6,7,8,9



# مابقی آرگومان ها را به صورت دیکشنری وارد تابع میکند
def roo(x,**items):
    pass
roo(a=1,b=2) # {a:1 , b:2}







"""خروجی"""
# برای دسترسی به خروجی باید داخل متغیری آن را صدا بزنی تا خروجی داخل متغیر ذخیره شود
def ret(a,b):
    return a *b
ret_2 = 3,2  # ret_2 = 6

# بدنه تابع نمیتواند خالی باشد اما به طور موقت میتوان از کلمه کلیدی استفاده کرد
def Pass():
    pass

# نوشتن اسم بدون پرانتز اشاره به خود تابع است نه دستورات و اجرای آن
n = User_2
n(4,5,6)






"""تعریف عملکرد تابع"""
# نوشتن خلاصه ای از عملکرد یک تابع
#  حتما باید اول خط باشد
def doc():
    """Doc function for learn in python chet shit."""
    pass

# دسترسی به راهنمای تابع
print(doc.__doc__) # Doc function for learn in python chet shit.







"""تعین تایپ"""
# تعین نوع تایپ ورودی و خروجی یک تابع
def type(a:int , b:int = "mohammad") -> int:
    return a + b

# برای معلوم کردن نوع تایپ ورودی و خروجی یک تابع
print(type.__annotations__)




# تابع تودرتو
def sara():
    def fare():
        print(True)
    fare() 
sara()   
